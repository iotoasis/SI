//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.06 at 03:14:16 오후 KST 
//


package net.herit.iot.onem2m.resource;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import net.herit.iot.message.onem2m.OneM2mRequest.OPERATION;
import net.herit.iot.message.onem2m.OneM2mResponse.RESPONSE_STATUS;
import net.herit.iot.onem2m.core.util.OneM2MException;
import net.herit.iot.onem2m.core.util.Utils;

import org.joda.time.LocalDateTime;
import org.joda.time.format.DateTimeFormat;


/**
 * XSD-1.6.0
 * <p>Java class for announcedSubordinateResource complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="announcedSubordinateResource">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.onem2m.org/xml/protocols}resource">
 *       &lt;sequence>
 *         &lt;element name="expirationTime" type="{http://www.onem2m.org/xml/protocols}timestamp"/>
 *         &lt;element name="link" type="{http://www.w3.org/2001/XMLSchema}anyURI"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "announcedSubordinateResource", propOrder = {
    "expirationTime",
    "link"
})
@XmlSeeAlso({
    ScheduleAnnc.class,
    AccessControlPolicyAnnc.class,  //added. XSD-1.6.0
    ContentInstanceAnnc.class,		//added. XSD-1.6.0
    TimeSeriesInstanceAnnc.class	//added. XSD-2.7.0
})
public class AnnouncedSubordinateResource
    extends Resource
{
	
    //@XmlElement(required = true)
    @XmlElement(name = Naming.EXPIRATIONTIME_SN)
    protected String expirationTime;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.LINK_SN)
    @XmlSchemaType(name = "anyURI")
    protected String link;

    /**
     * Gets the value of the expirationTime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExpirationTime() {
        return expirationTime;
    }

    /**
     * Sets the value of the expirationTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpirationTime(String value) {
        this.expirationTime = value;
    }

    /**
     * Gets the value of the link property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLink() {
        return link;
    }

    /**
     * Sets the value of the link property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLink(String value) {
        this.link = value;
    }

    @Override
	public void validate(OPERATION operation) throws OneM2MException {
				
		if (operation.equals(OPERATION.CREATE)) {	// CREATE 요청에 대한 데이터 유효성 체크

			if (this.link == null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "link is M on CREATE");				
			}
			

			if (this.resourceName != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceName is NP on CREATE");				
			}
			if (this.resourceType != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceType is NP on CREATE");				
			}
			if (this.resourceID != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceID is NP on CREATE");				
			}
			if (this.parentID != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "parentID is NP on CREATE");				
			}
			if (this.creationTime != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "creationTime is NP on CREATE");				
			}
			if (this.lastModifiedTime != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "lastModifiedTime is NP on CREATE");				
			}
			
			if (Utils.checkIfExpired(getExpirationTime())) {
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "Expired resource cannot created");
			}
		} else if (operation.equals(OPERATION.UPDATE)) {	// UPDATE 요청에 대한 데이터 유효성 체크

			if (this.resourceName != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceName is NP on CREATE");				
			}
			if (this.resourceType != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceType is NP on CREATE");				
			}
			if (this.resourceID != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceID is NP on CREATE");				
			}
			if (this.parentID != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "parentID is NP on CREATE");				
			}
			if (this.creationTime != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "creationTime is NP on CREATE");				
			}
			if (this.lastModifiedTime != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "lastModifiedTime is NP on CREATE");				
			}

		} else if (operation.equals(OPERATION.RETRIEVE)) {	// RETRIEVE 응답에 대한 유효성 체크
	
			if (expirationTime != null && Utils.checkIfExpired(getExpirationTime())) {
				throw new OneM2MException(RESPONSE_STATUS.NOT_FOUND, "Resource expired");
			}
			super.validate(operation);
		}		
		
	}
}
