//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.06 at 03:14:16 오후 KST 
//


package net.herit.iot.onem2m.resource;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

import net.herit.iot.message.onem2m.OneM2mRequest.OPERATION;
import net.herit.iot.message.onem2m.OneM2mResponse.RESPONSE_STATUS;
import net.herit.iot.message.onem2m.format.Enums.CONTENT_TYPE;
import net.herit.iot.onem2m.core.util.OneM2MException;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.onem2m.org/xml/protocols}regularResource">
 *       &lt;sequence>
 *         &lt;element name="eventNotificationCriteria" type="{http://www.onem2m.org/xml/protocols}eventNotificationCriteria" minOccurs="0"/>
 *         &lt;element name="expirationCounter" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" minOccurs="0"/>
 *         &lt;element name="notificationURI" type="{http://www.onem2m.org/xml/protocols}listOfURIs"/>
 *         &lt;element name="groupID" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="notificationForwardingURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="batchNotify" type="{http://www.onem2m.org/xml/protocols}batchNotify" minOccurs="0"/>
 *         &lt;element name="rateLimit" type="{http://www.onem2m.org/xml/protocols}rateLimit" minOccurs="0"/>
 *         &lt;element name="preSubscriptionNotify" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" minOccurs="0"/>
 *         &lt;element name="pendingNotification" type="{http://www.onem2m.org/xml/protocols}pendingNotification" minOccurs="0"/>
 *         &lt;element name="notificationStoragePriority" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" minOccurs="0"/>
 *         &lt;element name="latestNotify" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="notificationContentType" type="{http://www.onem2m.org/xml/protocols}notificationContentType"/>
 *         &lt;element name="notificationEventCat" type="{http://www.onem2m.org/xml/protocols}eventCat" minOccurs="0"/>
 *         &lt;element name="creator" type="{http://www.onem2m.org/xml/protocols}ID" minOccurs="0"/>
 *         &lt;element name="subscriberURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="childResource" type="{http://www.onem2m.org/xml/protocols}childResourceRef"/>
 *           &lt;element ref="{http://www.onem2m.org/xml/protocols}schedule"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "eventNotificationCriteria",
    "expirationCounter",
    "notificationURI",
    "groupID",
    "notificationForwardingURI",
    "batchNotify",
    "rateLimit",
    "preSubscriptionNotify",
    "pendingNotification",
    "notificationStoragePriority",
    "latestNotify",
    "notificationContentType",
    "notificationEventCat",
    "creator",
    "subscriberURI",
    "childResource",
    //"schedule"		removed in CDT-2.7.0
    "scheduleOrNotificationTargetMgmtPolicyRef"
})
//@XmlRootElement(name = "subscription")
@XmlRootElement(name = "sub")
public class Subscription
    extends RegularResource
{

//	public final static String SCHEMA_LOCATION = "CDT-subscription-v1_2_0.xsd";
//	public final static String SCHEMA_LOCATION = "CDT-subscription-v1_6_0.xsd";
	public final static String SCHEMA_LOCATION = "CDT-subscription-v2_7_0.xsd";
	
	@XmlElement(name = Naming.EVENTNOTIFICATIONCRITERIA_SN)
    protected EventNotificationCriteria eventNotificationCriteria;
    @XmlSchemaType(name = "positiveInteger")
    @XmlElement(name = Naming.EXPIRATIONCOUNTER_SN)
    protected Integer expirationCounter;
    @XmlList
    //@XmlElement(required = true)
    @XmlElement(name = Naming.NOTIFICATIONURI_SN)
    protected List<String> notificationURI;
    @XmlSchemaType(name = "anyURI")
    @XmlElement(name = Naming.GROUPID_SN)
    protected String groupID;
    @XmlSchemaType(name = "anyURI")
    @XmlElement(name = Naming.NOTIFICATIONFORWARDINGURI_SN)
    protected String notificationForwardingURI;
    @XmlElement(name = Naming.BATCHNOTIFY_SN)
    protected BatchNotify batchNotify;
    @XmlElement(name = Naming.RATELIMIT_SN)
    protected RateLimit rateLimit;
    @XmlSchemaType(name = "positiveInteger")
    @XmlElement(name = Naming.PRESUBSCRIPTIONNOTIFY_SN)
    protected Integer preSubscriptionNotify;
    @XmlElement(name = Naming.PENDINGNOTIFICATION_SN)
    protected Integer pendingNotification;
    @XmlSchemaType(name = "positiveInteger")
    @XmlElement(name = Naming.NOTIFICATIONSTORAGEPRIORITY_SN)
    protected Integer notificationStoragePriority;
    @XmlElement(name = Naming.LATESTNOTIFY_SN)
    protected Boolean latestNotify;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.NOTIFICATIONCONTENTTYPE_SN)
    protected Integer notificationContentType;
    @XmlElement(name = Naming.NOTIFICATIONEVENTCAT_SN)
    //protected String notificationEventCat;
    protected Integer notificationEventCat;
    @XmlElement(name = Naming.CREATOR_SN)
    protected String creator;
    @XmlSchemaType(name = "anyURI")
    @XmlElement(name = Naming.SUBSCRIBERURI_SN)
    protected String subscriberURI;
    @XmlElement(name = Naming.CHILDRESOURCE_SN)
    protected ChildResourceRef childResource;
    //@XmlElement(name = "sch", namespace = "http://www.onem2m.org/xml/protocols")
    //protected Schedule schedule;		removed in CDT-2.7.0
    @XmlElements({
        @XmlElement(name = "schedule", namespace = "http://www.onem2m.org/xml/protocols", type = Schedule.class),
        @XmlElement(name = "notificationTargetMgmtPolicyRef", namespace = "http://www.onem2m.org/xml/protocols", type = NotificationTargetMgmtPolicyRef.class)
    })
    protected List<Resource> scheduleOrNotificationTargetMgmtPolicyRef;

    public enum NOTIFICATIONEVENT_TYPE {
    	NONE(0, "none"),
    	UPDATE_OF_RESOURCE(1, "Update of Resource"),
    	DELETE_OF_RESOURCE(2, "Delete of Resource"),
    	CREATE_OF_CHILD_RESOURCE(3, "Create of Child Resource"),
    	DELETE_OF_CHILD_RESOURCE(4, "Delete of Child Resource");

    	final int value;
		final String name;
		private NOTIFICATIONEVENT_TYPE(int value, String name) {
			this.value = value;
			this.name = name;
		}
		
		public int Value() {
			return this.value;
		}
		
		public String Name() {
			return this.name;
		}
	
		private static final Map<Integer, NOTIFICATIONEVENT_TYPE> map = 
				new HashMap<Integer, NOTIFICATIONEVENT_TYPE>();
		static {
			for(NOTIFICATIONEVENT_TYPE en : NOTIFICATIONEVENT_TYPE.values()) {
				map.put(en.value, en);
			}
		}
		
		public static NOTIFICATIONEVENT_TYPE get(int value) {
			NOTIFICATIONEVENT_TYPE en = map.get(value);
			return en;
		}
    }
    
    public enum NOTIFICATIONCONTENT_TYPE {
    	
    	NONE(0, "none"),
    	ALL_ATRRIBUTES(1, "all attributes"),
    	MODIFIED_ATTRIBUTES(2, "modified attributes"),
    	RESOURCE_ID(3, "ResourceID");

    	final int value;
		final String name;
		private NOTIFICATIONCONTENT_TYPE(int value, String name) {
			this.value = value;
			this.name = name;
		}
		
		public int Value() {
			return this.value;
		}
		
		public String Name() {
			return this.name;
		}
	
		private static final Map<Integer, NOTIFICATIONCONTENT_TYPE> map = 
				new HashMap<Integer, NOTIFICATIONCONTENT_TYPE>();
		static {
			for(NOTIFICATIONCONTENT_TYPE en : NOTIFICATIONCONTENT_TYPE.values()) {
				map.put(en.value, en);
			}
		}
		
		public static NOTIFICATIONCONTENT_TYPE get(int value) {
			NOTIFICATIONCONTENT_TYPE en = map.get(value);
			return en;
		}
    };
    
    public String toString() {
    	StringBuilder sbld = new StringBuilder();
    	
    	sbld.append("[Subscription]").append(NL);
    	sbld.append("eventNotificationCriteria:").append(NL);
    	sbld.append(eventNotificationCriteria);
    	sbld.append("expirationCounter:").append(expirationCounter).append(NL);
    	sbld.append("notificationURI:").append(notificationURI).append(NL);
    	sbld.append("groupID:").append(groupID).append(NL);
    	sbld.append("notificationForwardingURI:").append(notificationForwardingURI).append(NL);
    	sbld.append("batchNotify:").append(batchNotify).append(NL);
    	sbld.append("rateLimit:").append(rateLimit).append(NL);
    	sbld.append("preSubscriptionNotify:").append(preSubscriptionNotify).append(NL);
    	sbld.append("pendingNotification:").append(pendingNotification).append(NL);
    	sbld.append("notificationStoragePriority:").append(notificationStoragePriority).append(NL);
    	sbld.append("latestNotify:").append(latestNotify).append(NL);
    	sbld.append("notificationContentType:").append(notificationContentType).append(NL);
    	sbld.append("notificationEventCat:").append(notificationEventCat).append(NL);
    	sbld.append("creator:").append(creator).append(NL);
    	sbld.append("subscriberURI:").append(subscriberURI).append(NL);
    	sbld.append("childResource:").append(childResource).append(NL);
    //	sbld.append("scheduleOrNotificationTargetMgmtPolicyRef:").append(scheduleOrNotificationTargetMgmtPolicyRef).append(NL);
    	
    	sbld.append(super.toString());
    	
    	return sbld.toString();
    }
    
    /**
     * Gets the value of the eventNotificationCriteria property.
     * 
     * @return
     *     possible object is
     *     {@link EventNotificationCriteria }
     *     
     */
    public EventNotificationCriteria getEventNotificationCriteria() {
        return eventNotificationCriteria;
    }

    /**
     * Sets the value of the eventNotificationCriteria property.
     * 
     * @param value
     *     allowed object is
     *     {@link EventNotificationCriteria }
     *     
     */
    public void setEventNotificationCriteria(EventNotificationCriteria value) {
        this.eventNotificationCriteria = value;
    }

    /**
     * Gets the value of the expirationCounter property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getExpirationCounter() {
        return expirationCounter;
    }

    /**
     * Sets the value of the expirationCounter property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setExpirationCounter(Integer value) {
        this.expirationCounter = value;
    }

    /**
     * Gets the value of the notificationURI property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the notificationURI property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNotificationURI().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getNotificationURI() {
//    	if (notificationURI == null) {
//    		notificationURI = new ArrayList<String>();
//        }
    	return this.notificationURI;
    }

    public void addNotificationURI(String uri) {
    	if (notificationURI == null) {
    		notificationURI = new ArrayList<String>();
        }
    	this.notificationURI.add(uri);
    }
    
    /**
     * Gets the value of the groupID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGroupID() {
        return groupID;
    }

    /**
     * Sets the value of the groupID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGroupID(String value) {
        this.groupID = value;
    }

    /**
     * Gets the value of the notificationForwardingURI property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNotificationForwardingURI() {
        return notificationForwardingURI;
    }

    /**
     * Sets the value of the notificationForwardingURI property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotificationForwardingURI(String value) {
        this.notificationForwardingURI = value;
    }

    /**
     * Gets the value of the batchNotify property.
     * 
     * @return
     *     possible object is
     *     {@link BatchNotify }
     *     
     */
    public BatchNotify getBatchNotify() {
        return batchNotify;
    }

    /**
     * Sets the value of the batchNotify property.
     * 
     * @param value
     *     allowed object is
     *     {@link BatchNotify }
     *     
     */
    public void setBatchNotify(BatchNotify value) {
        this.batchNotify = value;
    }

    /**
     * Gets the value of the rateLimit property.
     * 
     * @return
     *     possible object is
     *     {@link RateLimit }
     *     
     */
    public RateLimit getRateLimit() {
        return rateLimit;
    }

    /**
     * Sets the value of the rateLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link RateLimit }
     *     
     */
    public void setRateLimit(RateLimit value) {
        this.rateLimit = value;
    }

    /**
     * Gets the value of the preSubscriptionNotify property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getPreSubscriptionNotify() {
        return preSubscriptionNotify;
    }

    /**
     * Sets the value of the preSubscriptionNotify property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setPreSubscriptionNotify(Integer value) {
        this.preSubscriptionNotify = value;
    }

    /**
     * Gets the value of the pendingNotification property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getPendingNotification() {
        return pendingNotification;
    }

    /**
     * Sets the value of the pendingNotification property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setPendingNotification(Integer value) {
        this.pendingNotification = value;
    }

    /**
     * Gets the value of the notificationStoragePriority property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getNotificationStoragePriority() {
        return notificationStoragePriority;
    }

    /**
     * Sets the value of the notificationStoragePriority property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNotificationStoragePriority(Integer value) {
        this.notificationStoragePriority = value;
    }

    /**
     * Gets the value of the latestNotify property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isLatestNotify() {
        return latestNotify;
    }

    /**
     * Sets the value of the latestNotify property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setLatestNotify(Boolean value) {
        this.latestNotify = value;
    }

    /**
     * Gets the value of the notificationContentType property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getNotificationContentType() {
        return notificationContentType;
    }

    /**
     * Sets the value of the notificationContentType property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNotificationContentType(Integer value) {
        this.notificationContentType = value;
    }

    /**
     * Gets the value of the notificationEventCat property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
   // public String getNotificationEventCat() {
    public Integer getNotificationEventCat() {
        return notificationEventCat;
    }

    /**
     * Sets the value of the notificationEventCat property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
//    public void setNotificationEventCat(String value) {
//        this.notificationEventCat = value;
//    }
	public void setNotificationEventCat(Integer value) {
		this.notificationEventCat = value;
	}

    /**
     * Gets the value of the creator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCreator() {
        return creator;
    }

    /**
     * Sets the value of the creator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCreator(String value) {
        this.creator = value;
    }

    /**
     * Gets the value of the subscriberURI property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubscriberURI() {
        return subscriberURI;
    }

    /**
     * Sets the value of the subscriberURI property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubscriberURI(String value) {
        this.subscriberURI = value;
    }

    /**
     * Gets the value of the childResource property.
     * 
     * @return
     *     possible object is
     *     {@link ChildResourceRef }
     *     
     */
    public ChildResourceRef getChildResource() {
        return childResource;
    }

    /**
     * Sets the value of the childResource property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChildResourceRef }
     *     
     */
    public void setChildResource(ChildResourceRef value) {
        this.childResource = value;
    }

    /**
     * Gets the value of the schedule property.
     * 
     * @return
     *     possible object is
     *     {@link Schedule }
     *     
     *
    public Schedule getSchedule() {
        return schedule;
    }

    **
     * Sets the value of the schedule property.
     * 
     * @param value
     *     allowed object is
     *     {@link Schedule }
     *     
     *
    public void setSchedule(Schedule value) {
        this.schedule = value;
    }
    */
    
    /**
     * Gets the value of the scheduleOrNotificationTargetMgmtPolicyRef property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the scheduleOrNotificationTargetMgmtPolicyRef property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getScheduleOrNotificationTargetMgmtPolicyRef().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Schedule }
     * {@link NotificationTargetMgmtPolicyRef }
     * 
     * 
     */
    public List<Resource> getScheduleOrNotificationTargetMgmtPolicyRef() {
      //  if (scheduleOrNotificationTargetMgmtPolicyRef == null) {
      //      scheduleOrNotificationTargetMgmtPolicyRef = new ArrayList<Resource>();
      //  }
        return this.scheduleOrNotificationTargetMgmtPolicyRef;
    }
    
    public void addScheduleOrNotificationTargetMgmtPolicyRef(Resource res) {
        if (scheduleOrNotificationTargetMgmtPolicyRef == null) {
        	scheduleOrNotificationTargetMgmtPolicyRef = new ArrayList<Resource>();
         }
        scheduleOrNotificationTargetMgmtPolicyRef.add(res);
    }
    
    public void validate(OPERATION operation) throws OneM2MException {
		
		if (operation.equals(OPERATION.CREATE)) {	// CREATE 요청에 대한 데이터 유효성 체크
			if (notificationURI == null) {
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "'notificationURI' is M on CREATE operation");
			}
		//creator is Optional in CDT-2.7.0	
		//	if (creator != null) {
		//		throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "'creator' is NP on CREATE operation");	
		//	}
			
		} else if (operation.equals(OPERATION.UPDATE)) {	// UPDATE 요청에 대한 데이터 유효성 체크
			if (preSubscriptionNotify != null) {
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "'preSubscriptionNotify' is NP on UPDATE operation");
			}
			if (creator != null) {
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "'creator' is NP on UPDATE operation");
			}
			if (subscriberURI != null) {
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "'subscriberURI' is NP on UPDATE operation");
			}

		} else if (operation.equals(OPERATION.RETRIEVE)) {	// RETRIEVE 응답에 대한 유효성 체크

		}
		
		super.validate(operation);
		
	}

}
