//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.07 at 09:56:03 AM KST 
//


package net.herit.iot.onem2m.resource;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

import net.herit.iot.message.onem2m.OneM2mRequest.OPERATION;
import net.herit.iot.message.onem2m.OneM2mResponse.RESPONSE_STATUS;
import net.herit.iot.onem2m.core.util.OneM2MException;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.onem2m.org/xml/protocols}regularResource">
 *       &lt;sequence>
 *         &lt;element name="roleID" type="{http://www.onem2m.org/xml/protocols}roleID"/>
 *         &lt;element name="issuer" type="{http://www.onem2m.org/xml/protocols}ID"/>
 *         &lt;element name="holder" type="{http://www.onem2m.org/xml/protocols}ID"/>
 *         &lt;element name="notBefore" type="{http://www.onem2m.org/xml/protocols}timestamp"/>
 *         &lt;element name="notAfter" type="{http://www.onem2m.org/xml/protocols}timestamp"/>
 *         &lt;element name="roleName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="tokenLink" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="childResource" type="{http://www.onem2m.org/xml/protocols}childResourceRef" maxOccurs="unbounded"/>
 *           &lt;choice maxOccurs="unbounded">
 *             &lt;element ref="{http://www.onem2m.org/xml/protocols}subscription"/>
 *           &lt;/choice>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "roleID",
    "issuer",
    "holder",
    "notBefore",
    "notAfter",
    "roleName",
    "tokenLink",
    "childResource",
    "subscription"
})
public class Role
    extends RegularResource
{

    //@XmlElement(required = true)
    @XmlElement(name = Naming.ROLEID_SN, required = true)
    protected String roleID;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.ISSUER_SN, required = true)
    protected String issuer;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.HOLDER_SN, required = true)
    protected String holder;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.NOTBEFORE_SN, required = true)
    protected String notBefore;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.NOTAFTER_SN, required = true)
    protected String notAfter;
    @XmlElement(name = Naming.ROLENAME_SN)
    protected String roleName;
    @XmlSchemaType(name = "anyURI")
    @XmlElement(name = Naming.TOKENLINK_SN)
    protected String tokenLink;
    @XmlElement(name = Naming.CHILDRESOURCE_SN)
    protected List<ChildResourceRef> childResource;
    //@XmlElement(namespace = "http://www.onem2m.org/xml/protocols")
    @XmlElement(name = Naming.SUBSCRIPTION_SN, namespace = "http://www.onem2m.org/xml/protocols")
    protected List<Subscription> subscription;

    /**
     * Gets the value of the roleID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRoleID() {
        return roleID;
    }

    /**
     * Sets the value of the roleID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRoleID(String value) {
        this.roleID = value;
    }

    /**
     * Gets the value of the issuer property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIssuer() {
        return issuer;
    }

    /**
     * Sets the value of the issuer property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIssuer(String value) {
        this.issuer = value;
    }

    /**
     * Gets the value of the holder property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHolder() {
        return holder;
    }

    /**
     * Sets the value of the holder property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHolder(String value) {
        this.holder = value;
    }

    /**
     * Gets the value of the notBefore property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNotBefore() {
        return notBefore;
    }

    /**
     * Sets the value of the notBefore property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotBefore(String value) {
        this.notBefore = value;
    }

    /**
     * Gets the value of the notAfter property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNotAfter() {
        return notAfter;
    }

    /**
     * Sets the value of the notAfter property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotAfter(String value) {
        this.notAfter = value;
    }

    /**
     * Gets the value of the roleName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRoleName() {
        return roleName;
    }

    /**
     * Sets the value of the roleName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRoleName(String value) {
        this.roleName = value;
    }

    /**
     * Gets the value of the tokenLink property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTokenLink() {
        return tokenLink;
    }

    /**
     * Sets the value of the tokenLink property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTokenLink(String value) {
        this.tokenLink = value;
    }

    /**
     * Gets the value of the childResource property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the childResource property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getChildResource().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ChildResourceRef }
     * 
     * 
     */
    public List<ChildResourceRef> getChildResource() {
      //  if (childResource == null) {
      //      childResource = new ArrayList<ChildResourceRef>();
      //  }
        return this.childResource;
    }
    
    public void addChildResource(ChildResourceRef value) {
    	if (childResource == null) {
    		childResource = new ArrayList<ChildResourceRef>();
    	}
    	this.childResource.add(value);
    }

    /**
     * Gets the value of the subscription property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subscription property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubscription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Subscription }
     * 
     * 
     */
    public List<Subscription> getSubscription() {
     //   if (subscription == null) {
     //       subscription = new ArrayList<Subscription>();
     //   }
        return this.subscription;
    }
    
    public void addSubscription(Subscription value) {
    	if (subscription == null) {
    		subscription = new ArrayList<Subscription>();
    	}
    	this.subscription.add(value);
    }
    
 // added in CDT-2.7.0
    @Override
	public void validate(OPERATION operation) throws OneM2MException {
				
		if (operation.equals(OPERATION.CREATE)) {	// CREATE 요청에 대한 데이터 유효성 체크
			
			if (this.roleID == null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "roleID is M on CREATE");		
			}
			if (this.issuer == null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "issuer is M on CREATE");		
			}
			if (this.holder == null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "holder is M on CREATE");		
			}
			if (this.notBefore == null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "notBefore is M on CREATE");		
			}
			if (this.notAfter == null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "notAfter is M on CREATE");		
			}
			
		} else if (operation.equals(OPERATION.UPDATE)) {	// UPDATE 요청에 대한 데이터 유효성 체크
			
			if (this.roleID != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "roleID is NP on UPDATE");		
			}
			if (this.issuer != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "issuer is NP on UPDATE");		
			}
			if (this.holder != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "holder is NP on UPDATE");		
			}
			if (this.notBefore != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "notBefore is NP on UPDATE");		
			}
			if (this.notAfter != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "notAfter is NP on UPDATE");		
			}
			if (this.roleName != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "roleName is NP on UPDATE");		
			}
		}
		
		super.validate(operation);
		
	}

}
