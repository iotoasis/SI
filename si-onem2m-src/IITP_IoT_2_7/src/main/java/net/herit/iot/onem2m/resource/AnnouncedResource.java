//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.06 at 03:14:16 오후 KST 
//


package net.herit.iot.onem2m.resource;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import net.herit.iot.message.onem2m.OneM2mRequest.OPERATION;
import net.herit.iot.message.onem2m.OneM2mResponse.RESPONSE_STATUS;
import net.herit.iot.onem2m.core.util.OneM2MException;
import net.herit.iot.onem2m.core.util.Utils;


/**
 * XSD-1.6.0+
 * <p>Java class for announcedResource complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="announcedResource">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.onem2m.org/xml/protocols}resource">
 *       &lt;sequence>
 *         &lt;element name="accessControlPolicyIDs" type="{http://www.onem2m.org/xml/protocols}acpType"/>
 *         &lt;element name="expirationTime" type="{http://www.onem2m.org/xml/protocols}timestamp"/>
 *         &lt;element name="link" type="{http://www.w3.org/2001/XMLSchema}anyURI"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "announcedResource", propOrder = {
    "accessControlPolicyIDs",
    "expirationTime",
    "link",
    "dynamicAuthorizationConsultationIDs"
})
@XmlSeeAlso({
    AnnouncedMgmtResource.class,
    GroupAnnc.class,			//added. XSD-1.6.0
    ContainerAnnc.class,		//added. XSD-1.6.0
    AEAnnc.class,				//added. XSD-1.6.0
    RemoteCSEAnnc.class,		//added. XSD-2.7.0
    TimeSeriesAnnc.class,		//added. XSD-2.7.0
    TrafficPatternAnnc.class,	//added. XSD-2.7.0
    NodeAnnc.class,				//added. XSD-2.7.0
    SemanticDescriptorAnnc.class,	//added. XSD-2.7.0
    LocationPolicyAnnc.class	//added. XSD-2.7.0
})
public class AnnouncedResource
    extends Resource
{
    @XmlList
    //@XmlElement(required = true)
    @XmlElement(name = Naming.ACCESSCONTROLPOLICYIDS_SN)
    protected List<String> accessControlPolicyIDs;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.EXPIRATIONTIME_SN)
    protected String expirationTime;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.LINK_SN)
    @XmlSchemaType(name = "anyURI")
    protected String link;
    @XmlList
    @XmlElement(name = Naming.DYNAMICAUTHORIZATIONCONSULTATIONIDS_SN)
    protected List<String> dynamicAuthorizationConsultationIDs;
    
    public String toString() {
    	StringBuilder sbld = new StringBuilder();
    	sbld.append("accessControlPolicyIDs:").append(accessControlPolicyIDs).append(NL);
    	sbld.append("expirationTime:").append(expirationTime).append(NL);
    	sbld.append("link:").append(link).append(NL);
    	sbld.append(super.toString());
    	
    	return sbld.toString();
    }

    /**
     * Gets the value of the accessControlPolicyIDs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the accessControlPolicyIDs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAccessControlPolicyIDs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getAccessControlPolicyIDs() {
//        if (accessControlPolicyIDs == null) {
//            accessControlPolicyIDs = new ArrayList<String>();
//        }
        return this.accessControlPolicyIDs;
    }

    public void addAccessControlPolicyIDs(String id) {
    	if (accessControlPolicyIDs == null) {
    		accessControlPolicyIDs = new ArrayList<String>();
    	}
    	this.accessControlPolicyIDs.add(id);
    }
    
    /**
     * Gets the value of the expirationTime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExpirationTime() {
        return expirationTime;
    }

    /**
     * Sets the value of the expirationTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpirationTime(String value) {
        this.expirationTime = value;
    }

    /**
     * Gets the value of the link property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLink() {
        return link;
    }

    /**
     * Sets the value of the link property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLink(String value) {
        this.link = value;
    }
    
    /**
     * Gets the value of the dynamicAuthorizationConsultationIDs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dynamicAuthorizationConsultationIDs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDynamicAuthorizationConsultationIDs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getDynamicAuthorizationConsultationIDs() {
      //  if (dynamicAuthorizationConsultationIDs == null) {
      //      dynamicAuthorizationConsultationIDs = new ArrayList<String>();
      //  }
        return this.dynamicAuthorizationConsultationIDs;
    }
    
    public void addDynamicAuthorizationConsultationIDs(String value) {
    	if (dynamicAuthorizationConsultationIDs == null) {
    		dynamicAuthorizationConsultationIDs = new ArrayList<String>();
    	}
    	this.dynamicAuthorizationConsultationIDs.add(value);
    }

    @Override
	public void validate(OPERATION operation) throws OneM2MException {
				
		if (operation.equals(OPERATION.CREATE)) {	// CREATE 요청에 대한 데이터 유효성 체크

			if (this.link == null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "link is M on CREATE");				
			}
			

			if (this.resourceName != null) {			//2016.05.13 blocked. but opened in 2016-10-17 for CDT-2.7.0
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceName is NP on CREATE");				
			}
			if (this.resourceType != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceType is NP on CREATE");				
			}
			if (this.resourceID != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceID is NP on CREATE");				
			}
			if (this.parentID != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "parentID is NP on CREATE");				
			}
			if (this.creationTime != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "creationTime is NP on CREATE");				
			}
			if (this.lastModifiedTime != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "lastModifiedTime is NP on CREATE");				
			}
			
			if (Utils.checkIfExpired(getExpirationTime())) {
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "Expired resource cannot created");
			}
			
		} else if (operation.equals(OPERATION.UPDATE)) {	// UPDATE 요청에 대한 데이터 유효성 체크

			if (this.resourceName != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceName is NP on CREATE");				
			}
			if (this.resourceType != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceType is NP on CREATE");				
			}
			if (this.resourceID != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "resourceID is NP on CREATE");				
			}
			if (this.parentID != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "parentID is NP on CREATE");				
			}
			if (this.creationTime != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "creationTime is NP on CREATE");				
			}
			if (this.lastModifiedTime != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "lastModifiedTime is NP on CREATE");				
			}


		} else if (operation.equals(OPERATION.RETRIEVE)) {	// RETRIEVE 응답에 대한 유효성 체크
	
			if (expirationTime != null && Utils.checkIfExpired(getExpirationTime())) {
				throw new OneM2MException(RESPONSE_STATUS.NOT_FOUND, "Resource expired");
			}
			super.validate(operation);
		}		
		
	}
}
