//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.07 at 09:56:03 AM KST 
//


package net.herit.iot.onem2m.resource;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import net.herit.iot.message.onem2m.OneM2mRequest.OPERATION;
import net.herit.iot.message.onem2m.OneM2mResponse.RESPONSE_STATUS;
import net.herit.iot.onem2m.core.util.OneM2MException;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.onem2m.org/xml/protocols}regularResource">
 *       &lt;sequence>
 *         &lt;element name="creator" type="{http://www.onem2m.org/xml/protocols}ID" minOccurs="0"/>
 *         &lt;element name="action" type="{http://www.onem2m.org/xml/protocols}notificationTargetPolicyAction"/>
 *         &lt;element name="policyLabel" type="{http://www.w3.org/2001/XMLSchema}token"/>
 *         &lt;element name="rulesRelationship" type="{http://www.onem2m.org/xml/protocols}logicalOperator" minOccurs="0"/>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="childResource" type="{http://www.onem2m.org/xml/protocols}childResourceRef" maxOccurs="unbounded"/>
 *           &lt;choice maxOccurs="unbounded">
 *             &lt;element ref="{http://www.onem2m.org/xml/protocols}policyDeletionRules"/>
 *             &lt;element ref="{http://www.onem2m.org/xml/protocols}subscription"/>
 *           &lt;/choice>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "creator",
    "action",
    "policyLabel",
    "rulesRelationship",
    "childResource",
    "policyDeletionRulesOrSubscription"
})
public class NotificationTargetPolicy
    extends RegularResource
{
	public final static String SCHEMA_LOCATION = "CDT-notificationTargetPolicy-v2_7_0.xsd";

	@XmlElement(name = Naming.CREATOR_SN)
    protected String creator;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.ACTION_SN, required = true)
    protected Integer action;
    //@XmlElement(required = true)
    @XmlElement(name = Naming.POLICYLABEL_SN, required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String policyLabel;
    @XmlElement(name = Naming.RULESRELATIONSHIP_SN)
    protected Integer rulesRelationship;
    @XmlElement(name = Naming.CHILDRESOURCE_SN)
    protected List<ChildResourceRef> childResource;
    @XmlElements({
        @XmlElement(name = "policyDeletionRules", namespace = "http://www.onem2m.org/xml/protocols", type = PolicyDeletionRules.class),
        @XmlElement(name = "subscription", namespace = "http://www.onem2m.org/xml/protocols", type = Subscription.class)
    })
    protected List<RegularResource> policyDeletionRulesOrSubscription;

    /**
     * Gets the value of the creator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCreator() {
        return creator;
    }

    /**
     * Sets the value of the creator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCreator(String value) {
        this.creator = value;
    }

    /**
     * Gets the value of the action property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getAction() {
        return action;
    }

    /**
     * Sets the value of the action property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setAction(Integer value) {
        this.action = value;
    }

    /**
     * Gets the value of the policyLabel property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPolicyLabel() {
        return policyLabel;
    }

    /**
     * Sets the value of the policyLabel property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPolicyLabel(String value) {
        this.policyLabel = value;
    }

    /**
     * Gets the value of the rulesRelationship property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getRulesRelationship() {
        return rulesRelationship;
    }

    /**
     * Sets the value of the rulesRelationship property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRulesRelationship(Integer value) {
        this.rulesRelationship = value;
    }

    /**
     * Gets the value of the childResource property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the childResource property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getChildResource().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ChildResourceRef }
     * 
     * 
     */
    public List<ChildResourceRef> getChildResource() {
     //   if (childResource == null) {
     //       childResource = new ArrayList<ChildResourceRef>();
     //   }
        return this.childResource;
    }
    
    public void addChildResource(ChildResourceRef childRef) {
        if (childResource == null) {
            childResource = new ArrayList<ChildResourceRef>();
         }
        childResource.add(childRef);
      }

    /**
     * Gets the value of the policyDeletionRulesOrSubscription property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the policyDeletionRulesOrSubscription property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPolicyDeletionRulesOrSubscription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PolicyDeletionRules }
     * {@link Subscription }
     * 
     * 
     */
    public List<RegularResource> getPolicyDeletionRulesOrSubscription() {
      //  if (policyDeletionRulesOrSubscription == null) {
      //      policyDeletionRulesOrSubscription = new ArrayList<RegularResource>();
      //  }
        return this.policyDeletionRulesOrSubscription;
    }
    
    public void addPolicyDeletionRulesOrSubscription(RegularResource res) {
        if (policyDeletionRulesOrSubscription == null) {
        	policyDeletionRulesOrSubscription = new ArrayList<RegularResource>();
         }
        policyDeletionRulesOrSubscription.add(res);
      }
    
 // added in CDT-2.7.0
    @Override
	public void validate(OPERATION operation) throws OneM2MException {
				
		if (operation.equals(OPERATION.CREATE)) {	// CREATE 요청에 대한 데이터 유효성 체크
		
		} else if (operation.equals(OPERATION.UPDATE)) {	// UPDATE 요청에 대한 데이터 유효성 체크
			if (this.creator != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "creator is NP on UPDATE");				
			}
			if (this.action != null) {				
				throw new OneM2MException(RESPONSE_STATUS.INVALID_ARGUMENTS, "action is NP on UPDATE");				
			}
		}
		
		super.validate(operation);
		
	}

}
