package org.eclipse.leshan.server.extension.onem2m.resources;

import java.io.IOException;
import java.util.ArrayList;

import org.eclipse.leshan.server.extension.Constants;
import org.eclipse.leshan.server.extension.Util;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class SemanticDescriptor extends Resource{
	
	public SemanticDescriptor(){
		setShortName("smd");
		setRn("semanticDescriptor");
		setApi(Constants.BASIC_AE_NAME);
		resetLbl();
		setExpired();
	}
	
    // for create
    public JSONObject setForCreate() {

    	JSONObject body_wrap = new JSONObject();
    	JSONObject body = new JSONObject();
    	JSONArray lbl = new JSONArray();
    	
        try {
        	if( getLbl() != null ){
	            for(String label : getLbl()) {
	                lbl.put(label);
	            }
	            body.put("lbl", lbl);
        	}

            body.put("rn", getRn());
            body.put("et", getEt());
            body.put("dcrp", "application/rdf+xml:1");
            body.put("dsp", "");

            body_wrap.put(getNameSpace(this),body);

        } catch(JSONException jsone) {
            jsone.printStackTrace();
        } catch(Exception e) {
            e.printStackTrace();
        }
        
        return body_wrap;
    }
    
    public SemanticDescriptor makes(){
    	setResToJson(setForCreate());
    	return this;
    }
    
    public JSONObject getJSON(){
    	makes();
		return getResToJson();
	}
    
    /*
    
    // retrieve
    public JSONObject retrieveAE(FoundItem oicDevice) {

        JSONObject jsonResponse = new JSONObject();

        try {
            String strOrigin = "OIC-" + this.deviceId;

            client.openConnection();
            client.setRequestHeader(this.host, this.deviceId, this.deviceId, strOrigin, MemberType.AE, Constants.REQUEST_METHOD_TYPE.GET.Value());
            jsonResponse = client.getResponse();

        }catch(IOException ioe) {
            ioe.printStackTrace();
        }catch(JSONException jsone) {
            jsone.printStackTrace();
        }catch(Exception e) {
            e.printStackTrace();
        }

        return jsonResponse;
    }
    // delete
    public JSONObject deleteAE(FoundItem oicDevice) {

        JSONObject jsonResponse = new JSONObject();

        try {
            client.openConnection();
            client.setRequestHeader(this.host, this.deviceId, this.deviceId, oicDevice.getResourceUri(), MemberType.AE, Constants.REQUEST_METHOD_TYPE.DELETE.Value());

            jsonResponse = client.getResponse();

        }catch(IOException ioe) {
            ioe.printStackTrace();
        }catch(JSONException jsone) {
            jsone.printStackTrace();
        }catch(Exception e) {
            e.printStackTrace();
        }

        return jsonResponse;
    }
    */
}
